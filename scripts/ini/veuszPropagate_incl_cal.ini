# Run Veusz to save calibration coefficients (see eval_list)

[in] ; source data fies
path = d:\workData\BalticSea\171003_ANS36\inclinometr\171017\171121zeroing\I*[0-9].txt
#d:\workData\BalticSea\171003_ANS36\inclinometr\171017\17*#??.txt
start_file_index = 16
# exclude some files from search in recursive directories:
exclude_files_endswith_list = -.txt, test.txt, _SoundV.txt ; default: coef.txt

pattern_path = d:\workData\BalticSea\171003_ANS36\inclinometr\171017\171121zeroing\INKL_001.vsz

eval_list = "ImportFileCSV(u'{nameRFE}', blanksaredata=True, encoding='ascii', headermode='1st', linked=True, dsprefix=u'counts', rowsignore=2, skipwhitespace=True)",
            "TagDatasets(u'source', [u'countsAx', u'countsAy', u'countsAz', u'countsBattery', u'countsDay', u'countsHour', u'countsMinute', u'countsMonth', u'countsMx', u'countsMy', u'countsMz', u'countsSecond', u'countsTemp', u'countsYear'])",
            "SetDataExpression('temp', "f(lambda f: [f.write(str(Ag)), f.close()], open('{nameRFE}'[:-4]+'_data.txt', 'w+'))")",
            "SetDataExpression('temp', '[]')"

#with open({nameRFE}[:-4]+'_data.txt','w+') as f: f.write(str(GetData('Ag')[0]))
[out] ; veusz files
# patern:
#d:\WorkData\BalticSea\171003_ANS36\CTD_Idronaut#494\171004_1357#494.vsz
#d:\workData\BalticSea\170614_ANS34\CTD_Idronaut#494\170630_0900.vsz
exclude_dirs_endswith_list = -, bad, test, TEST ; default: bad, test
exclude_files_endswith_list = -.bin, test.bin ; default: coef.txt

b_update_existed = True ; False if comment / True

#b_images_only= True
; compare output with log and skip if output exist and pattern time not updated:
;b_skip_if_up_to_date= True -not implemented
export_pages_int_list = 0 ; pages numbers to export, comma separated. 0= all, 1 is first
export_dir = images(vsz)

[program]
log = log/viewsPropagate.log ; log operations