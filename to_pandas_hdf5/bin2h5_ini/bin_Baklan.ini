[in]
#Binary data path mask:
path = d:\WorkData\_source\AtlanticOcean\161113_Strahov\Baklan\_source\2016*.bin

# Files search is doing recursively, so to exclude some sub dirs/files specify them here:
exclude_dirs_endswith_list = -, bad, test, TEST ; default: bad, test
exclude_files_endswith_list = -.bin, test.bin ; default: coef.txt

dt_from_utc_hours = 0 ; UTC time offset in date from file in this computer zone
b_time_fromtimestamp = True  ; if False extruct date from last part of file name: yyyy-mm-dd-HHMM
; if True then uses file modification time instead name
fs_float = 500 ;[Hz]
delimiter_hex = ??????0A ; 8080800A,
data_words_integer = 32
data_word_len_integer = 3 ;[bytes] => default data type is int32
header = Count0,Depth,DepthHB,tP,tP_HB,EM_X,EM_Y,EM_Z,Shear_0,Shear_1,Shear_2,Temp1,Temp1HB,Ax_,Az_,Ay_,Cond,CondHB,Temp2,Temp2HB,Ch1,Ch2,Ch3,Count,CountHB,Ch26,Ch27,Ch28,Ch29,Ch30,Ch31,Ch32
#dtype= uint32 ;uint16 - auto
b_byte_order_is_big_endian = True
b_baklan = True

b_incremental_update = True

[filter]
#min_date= 02.08.2016 11:49:00 ; UTC, not output data < min_date
#max_date= 01.01.2017 00:00:00 ; UTC, not output data > max_date

[out]
path = d:\WorkData\_source\AtlanticOcean\161113_Strahov\Baklan\_source
table = Baklan
b_insert_separator = False ; insert row filled with NaNs before each next file data start
b_reuse_temporary_tables = False ; Warning! If True and b_incremental_update= True then not replace temporary file with result before proc.
; Warning! Set False only if temporary storage already have good data!
logfield_filename_len_integer = 255

[program]
log = log/binConvertBaklan.log ; log operations